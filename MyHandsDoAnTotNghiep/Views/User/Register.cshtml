@model MyHandsDoAnTotNghiep.Models.RegisterModel
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl"
      rel="stylesheet" type="text/css" />
@{ MvcCaptcha registerCapcha = new MvcCaptcha("registerCapcha"); }

@{
    ViewBag.Title = "Đăng ký thành viên";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section jsFooter{

    <script src="/Assets/Client/js/controller/loadTinhThanhPho.js"></script>
}

<div style="height:20px"></div>
<div class="container single_product_container">
    @using (Html.BeginForm("Register", "User", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Đăng ký thành viên</h2>
        <hr />
        @if (ViewBag.Success != null)
        {
            <div class="alert alert-success">@ViewBag.Success</div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.sTenDangNhap, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sTenDangNhap, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sTenDangNhap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sMatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.sMatKhau, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sMatKhau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sXacNhanMatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.sXacNhanMatKhau, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sXacNhanMatKhau, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sTenNguoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sTenNguoiDung, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sTenNguoiDung, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sEmail, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sEmail, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.iTinhThanhID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("iTinhThanhID", new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlTinhThanh" })
                @Html.ValidationMessageFor(model => model.iTinhThanhID, "", new { @class = "text-danger" })
                <input type="hidden" id="hdnTenTinhThanh" name="hdnTenTinhThanh" />

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.iQuanHuyenID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("iQuanHuyenID", new SelectList(new string[] { }), new { @class = "form-control", @id = "ddlQuanHuyen" })
                @Html.ValidationMessageFor(model => model.iTinhThanhID, "", new { @class = "text-danger" })
                <input type="hidden" id="hdnTenQuanHuyen" name="hdnTenQuanHuyen" />

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.sDiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.sDiaChi, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sDiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sSDT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.sSDT, new { @class = "form-control" })<br />
                @Html.ValidationMessageFor(model => model.sSDT, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.Captcha(registerCapcha)
                @Html.TextBox("CaptchaCode")
            </div>
        </div>
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Đăng ký thành viên" class="btn btn-primary btn-user btn-block" />
            </div>
        </div>
    </div>
    }
</div>
